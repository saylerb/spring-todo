buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

sourceCompatibility = 1.8

sourceSets {
    databaseTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    databaseTestImplementation.extendsFrom implementation, testImplementation
    databaseTestRuntimeOnly.extendsFrom runtimeOnly
}

idea {
    module {
        testSourceDirs += sourceSets.databaseTest.java.srcDirs
        testResourceDirs += sourceSets.databaseTest.resources.srcDirs
    }
}

repositories {
    mavenCentral()
}

bootJar {
    baseName = 'spring-todo'
    version = '0.1.0'
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-hateoas')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation('org.flywaydb:flyway-core:5.2.4')
    runtimeOnly 'org.postgresql:postgresql'
}

bootRun {
    String activeProfile = System.properties['spring.profiles.active']
    systemProperty "spring.profiles.active", activeProfile
}

test {
    systemProperty 'spring.profiles.active', 'test'
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task databaseTest(type: Test) {
    group = 'verification'
    description = 'Runs database tests.'
    testClassesDirs = sourceSets.databaseTest.output.classesDirs
    classpath = sourceSets.databaseTest.runtimeClasspath
    systemProperty 'spring.profiles.active', 'test'
    testLogging {
        events "passed", "skipped", "failed"
    }
    shouldRunAfter test
}

check.dependsOn databaseTest
